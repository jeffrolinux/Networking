install vm
install ?  # question mark will always tell you the options you have
install image or install system     system uses current config

note you can not see where your at in configuration, if rule is being denied, get out and back into conf 
Commands are stored in memory until commit applies commands, save saves config to boot file
configure to get into configuration mode. You will know if you are in by prompt changing to root hashtag prompt
exit discard, to exit and discard commands you put in without commiting or saving them
anything you want to delete just prefix command with delete , kind of like noing out in cisco
show ip route    to see routing table

to configure dhcp so that your system can access the internet there is two choices
set interfaces ethernet eth0 address dhcp
show interfaces ethernet  # to confirm and see output , run if you are in configure
or vim /etc/network/interfaces  	auto eth0	iface eth0 inet dhcp
basically standard linux way fo configureing interface or through VYOS

set interfaces ethernet eth1 address 192.168.80.1/24
commit, save
set int eth eth0 description outside
set int eth eth1 description inside
 run show int eth   # run works like do in cisco you can run it inside conf

set service ssh
set system login user myuser authentification plaintext-password password
set system login user myuser level admin
commit , save

set service dhcp-server shared-network-name Main subnet 192.168.80.0/24
edit service dhcp-server shared-network-name Main subnet 192.168.80.0/24

set default-router 192.168.80.1
set dns-server 8.8.8.8
set domain-name datacenter.com
edit service dhcp-server shared-network-name Main subnet 192.168.80.0/24
set start 192.168.80.10 stop 192.168.80.50
show dhcp server leases

edit nat source rule 1
set outbound-interface eth0
set source address 192.168.80.0/24
set translation address masquerade
show nat source translation  # to view everything show nat source rule

to boot over serial so you dont have to launch a screen
as super user
vim /boot/grub/grub.cfg
set default to 1   it enables serial console using serial port there is also a option for usb "2"


static routing subnets
set protocols static route 192.168.82.0/24 next-hop 192.168.80.3      
                    on this subnet  get in at this router address!
for gateways use
set protocols static route 0.0.0.0/0 next-hop 192.168.80.1   
__________________________________________________________________________________________________________________________________
Nat reflection-    basically when you go to your router for a server that is in your subnet nat reflection resolves Server inside the
 router. Used in a situation where you have port forwarding for an inside resource and your client communicated initially with the
 public IP and not the internal subnet IP. You do not want the server responding on the subnet IP because the client was not initally
communicating to that IP. Nat reflection allow both server and client on the interneal subnet to communicate via the router so that 
a client can communicate with the public IP that is forwarded into its private IP.

edit nat destination rule 2  PORT FORWARDING FOR PUBLIC IP TO RESOLVE PRIVATE RESOURCE
set inbound-interface any 
set destination address 10.16.11.70  # setting the public ip outside ip address
set destination port 80  # setting the port for that IP addr
set translation address 192.168.1.5 # this is your internal server that you need to communicate with via public ip
set translation port 80  #
set protocol tcp
show nat destination translation- to view results

NAT REFLECTION FOR INTERNAL RESOURCE TO GET RESOLVED VIA ROUTER
edit nat source rule 2
set source address 192.168.1.0/24
set destination address 192.168.1.0/24
set translation address masquerade
set outbound-interface eth1  # the interface the is getting masqueraded
set description Reflection
# You wouldn't need this if you created a dmz or resource was in another subnet.

OSPF- shares topology and chooses best route based on the link state
set protocols ospf
edit protocols ospf
set area 0 network 192.168.1.0/24
set area 1 network 192.168.2.0/24
set area 2 network 192.168.3.0/24 # advertises these subnets to local routers
set passive interaces eth4  #interface that will not advertise out of

RIP
set protocol rip
edit protocol rip
set protocols rip network 192.168.0.0/24
set protocols rip redistribute connected
